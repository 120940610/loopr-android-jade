apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 26

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile project(':lib.common')

    annotationProcessor gradle.arouterCompiler
    compile gradle.libARouter

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //Butterknife
    annotationProcessor gradle.butterknifeCompiler
    compile gradle.libButterKnife

    //LifeCycle
    compile gradle.lifecycleRuntime
    compile gradle.lifecycleExtensions

    //Rxjava
    implementation gradle.rxjava
    implementation gradle.rxAndroid

    // Dagger
    implementation gradle.dagger
    annotationProcessor gradle.daggerCompiler
    implementation gradle.daggerAndroidSupport
    annotationProcessor gradle.daggerAndroidProcessor
    implementation gradle.daggerAndroid

    //Etherium client
    implementation gradle.ethweb3j
    implementation gradle.geth

    // Http client
    implementation gradle.retrofit
    implementation gradle.retrofitConverterGson
    implementation gradle.retrofitRxjava

    //Okhttp
    implementation gradle.okhttp

    //Gson
    implementation gradle.gson

}

configurations.maybeCreate("default")
artifacts.add("default", file('trustnative.aar'))
